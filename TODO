- basic serial communication (ok)
- create low level interface (ok)
- create bus control (ok)
- show status
  - create state representation (current cycle, bus controller) (ok)
  - show all pins (ok)
  - show who is controlling the bus (no)
- improve start - put CPU on reset, run one cycle, control bus (ok)
- memory operations:
  - read single byte (ok)
  - dump (ok)
  - write single byte (ok)
  - upload file (ok)
- external program for file upload (ok)
- cpu
  - cycle (ok)
  - reset (ok)
- fix line A5 on first port (ok)
- remove bell from inputs (ok)
- add help (ok)
- ROM memory writing - use D4 (ok)
- speed up communication (ok)
- fix specific incorrect memory locations on upload (ok)
- reduce RAM usage (ok)
  - free available RAM (ok)
  - reduce memory usage (https://jeelabs.org/2011/05/22/atmega-memory-use/) (ok)
- write memory tests (ok)
- fix NMI issue (ok)
- debugger
  - step (request bus) (ok)
  - show instructions (ok)
  - add listing (ok)
- file upload
  - optionally remove debugger (ok)
  - block write data to memory
  - remove non-checking memory write
  - communication interface
- serial interface
  - send key presses (interrupt)
  - receive terminal changes (bus)
- run
  - run in debugger
  - run without debugger
    - serial i/o
- debugger
  - show registers
    - show state: halted
  - breakpoints
  - step over
